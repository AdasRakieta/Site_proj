version: '3.8'
services:
  app:
    image: ghcr.io/adasrakieta/site_proj/smarthome_app:${IMAGE_TAG:-latest}
    container_name: smarthome_app
    environment:
      # Server Configuration
      - SERVER_HOST=${SERVER_HOST:-0.0.0.0}
      - SERVER_PORT=${SERVER_PORT:-5000}
      - IMAGE_TAG=${IMAGE_TAG:-latest}
      
      # Database Configuration (REQUIRED)
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      
      # Email Configuration (REQUIRED)
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      
      # Flask Configuration (REQUIRED)
      - FLASK_ENV=${FLASK_ENV:-production}
      - SECRET_KEY=${SECRET_KEY}
      
      # Redis configuration (connect to external standalone Redis container)
      # Set REDIS_HOST to 'smarthome_redis_standalone' or your Redis container name
      - REDIS_HOST=${REDIS_HOST:-smarthome_redis_standalone}
      - REDIS_PORT=${REDIS_PORT:-6379}
      
      # Asset versioning (auto-set by build, can override)
      - ASSET_VERSION=${ASSET_VERSION:-}
      
      # Optional feature flags
      - ENABLE_REGISTRATION=${ENABLE_REGISTRATION:-true}
      - ENABLE_MULTI_HOME=${ENABLE_MULTI_HOME:-true}
    volumes:
      - static_uploads:/srv/static/profile_pictures
    ports:
      - "5000:5000"
    restart: unless-stopped
    # Connect to external Redis container via Docker network
    external_links:
      - smarthome_redis_standalone:redis

  nginx:
    image: ghcr.io/adasrakieta/site_proj/smarthome_nginx:${IMAGE_TAG:-latest}
    container_name: smarthome_nginx
    volumes:
      - static_uploads:/srv/static/profile_pictures:ro
    ports:
      - "80:80"
    depends_on:
      - app
    restart: unless-stopped

volumes:
  static_uploads: