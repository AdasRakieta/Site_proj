console.log('controls.js loaded');function getCSRFToken(){let token=null;const meta=document.querySelector('meta[name="csrf-token"]');if(meta)token=meta.getAttribute('content');if(!token){const input=document.querySelector('input[name="_csrf_token"]');if(input)token=input.value;}
if(!token&&window.csrf_token){token=window.csrf_token;}
console.log('CSRF Token:',token);return token;}
(function(){let dragMode=false;let draggedItem=null;let dragStartIndex=null;let currentLists=["roomsList","buttonsList","temperatureControlsList"];function addReorderButtonGlobal(){const oldBtn=document.getElementById("reorderRoomsBtn");if(oldBtn&&oldBtn.parentElement)oldBtn.parentElement.removeChild(oldBtn);let btn=document.getElementById("reorderAllBtn");if(btn)return;btn=document.createElement("button");btn.id="reorderAllBtn";btn.className="rooms-button";btn.textContent=dragMode?"Zakończ edycję kolejności":"Edytuj kolejność wszystkich";btn.style.margin="30px auto 0 auto";btn.style.display="block";btn.style.fontWeight="bold";btn.addEventListener("click",function(){if(!dragMode){enableDragModeAll();btn.textContent="Zakończ edycję kolejności";}else{disableDragModeAll();btn.textContent="Edytuj kolejność wszystkich";}});const grid=document.querySelector('.grid-container-list');if(grid&&grid.parentElement){grid.parentElement.appendChild(btn);}}
function enableDragModeAll(){dragMode=true;currentLists.forEach(listId=>{const list=document.getElementById(listId);if(!list)return;Array.from(list.children).forEach((li,idx)=>{li.draggable=true;li.style.cursor="grab";li.addEventListener('dragstart',onDragStart);li.addEventListener('dragover',onDragOver);li.addEventListener('drop',onDrop);li.addEventListener('dragend',onDragEnd);});});}
function disableDragModeAll(){dragMode=false;currentLists.forEach(listId=>{const list=document.getElementById(listId);if(!list)return;Array.from(list.children).forEach((li)=>{li.draggable=false;li.style.cursor="";li.removeEventListener('dragstart',onDragStart);li.removeEventListener('dragover',onDragOver);li.removeEventListener('drop',onDrop);li.removeEventListener('dragend',onDragEnd);});});saveAllOrdersToBackend();}
async function saveAllOrdersToBackend(){const roomsList=document.getElementById('roomsList');const rooms=Array.from(roomsList.children).map(li=>li.querySelector('.list-item-content').textContent);const buttonsList=document.getElementById('buttonsList');const buttons=Array.from(buttonsList.children).map(li=>{const txt=li.querySelector('.list-item-content').textContent;const[name,room]=txt.split(' - ');return{name:name?.trim(),room:room?.trim()};});const tempList=document.getElementById('temperatureControlsList');const tempControls=Array.from(tempList.children).map(li=>{const txt=li.querySelector('.list-item-content').textContent;const[name,room]=txt.split(' - ');return{name:name?.trim(),room:room?.trim()};});try{await fetch('/api/rooms/order',{method:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':getCSRFToken()},body:JSON.stringify({rooms})});await fetch('/api/buttons/order',{method:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':getCSRFToken()},body:JSON.stringify({buttons})});await fetch('/api/temperature_controls/order',{method:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':getCSRFToken()},body:JSON.stringify({controls:tempControls})});if(window.showNotification)window.showNotification('Kolejność zapisana!','success');}catch(e){if(window.showNotification)window.showNotification('Błąd zapisu kolejności!','error');}}
function onDragStart(e){draggedItem=this;dragStartIndex=Array.from(this.parentNode.children).indexOf(this);this.classList.add('dragging');e.dataTransfer.effectAllowed='move';}
function onDragOver(e){e.preventDefault();e.dataTransfer.dropEffect='move';const overItem=this;if(overItem===draggedItem)return;overItem.classList.add('drag-over');}
function onDrop(e){e.preventDefault();const list=this.parentNode;const dragOverIndex=Array.from(list.children).indexOf(this);if(dragStartIndex!==dragOverIndex){if(dragStartIndex<dragOverIndex){list.insertBefore(draggedItem,this.nextSibling);}else{list.insertBefore(draggedItem,this);}}
this.classList.remove('drag-over');}
function onDragEnd(){this.classList.remove('dragging');Array.from(this.parentNode.children).forEach(li=>li.classList.remove('drag-over'));}
const origUpdateRoomsList=window.updateRoomsList;window.updateRoomsList=function(rooms){origUpdateRoomsList(rooms);window.updateRoomSelect(rooms);window.updateRoomSelectTemp(rooms);addReorderButtonGlobal();};const origUpdateButtonsList=window.updateButtonsList;window.updateButtonsList=function(buttons){origUpdateButtonsList(buttons);addReorderButtonGlobal();};const origUpdateTemperatureControlsList=window.updateTemperatureControlsList;window.updateTemperatureControlsList=function(controls){origUpdateTemperatureControlsList(controls);addReorderButtonGlobal();};const style=document.createElement('style');style.textContent=`.list-container.dragging{opacity:0.5;}.list-container.drag-over{border:2px dashed var(--accent);background:var(--hover);}`;document.head.appendChild(style);document.addEventListener('DOMContentLoaded',addReorderButtonGlobal);window.addReorderButtonGlobal=addReorderButtonGlobal;})();function renderKanbanLists(rooms,buttons,controls){console.log('renderKanbanLists called');const kanbanContainer=document.getElementById('kanbanContainer');kanbanContainer.innerHTML='';const columnsWrapper=document.createElement('div');columnsWrapper.id='kanbanColumnsWrapper';columnsWrapper.style.display='flex';columnsWrapper.style.flexWrap='wrap';columnsWrapper.style.gap='20px';columnsWrapper.style.justifyContent='center';columnsWrapper.style.alignItems='flex-start';columnsWrapper.style.maxWidth='1200px';columnsWrapper.style.margin='0 auto';columnsWrapper.style.padding='20px';kanbanContainer.appendChild(columnsWrapper);const unassignedColumn=createKanbanColumn('Nieprzypisane',buttons.filter(b=>!b.room),controls.filter(c=>!c.room),true);columnsWrapper.appendChild(unassignedColumn);rooms.forEach(room=>{let roomObj=room;if(typeof room==='string'){roomObj={name:room,id:room};}
const column=createKanbanColumn(roomObj,buttons.filter(button=>button.room===roomObj.name),controls.filter(control=>control.room===roomObj.name));columnsWrapper.appendChild(column);});const columns=columnsWrapper.querySelectorAll('.kanban-column');columns.forEach(col=>{col.style.flex='0 0 calc(25% - 15px)';col.style.minWidth='280px';col.style.maxWidth='300px';});if(window.initDynamicKanbanDragula){console.log('Setting up Dragula handlers');const allLists=document.querySelectorAll('.kanban-list');window.initDynamicKanbanDragula(function onDropHandler(el,target,source,sibling){console.log('Device moved - changes will be stored until save');});}
if(window.columnsDragulaInstance&&window.columnsDragulaInstance.destroy){window.columnsDragulaInstance.destroy();}
window.columnsDragulaInstance=dragula([columnsWrapper],{moves:function(el,container,handle){if(!window.editMode)return false;if(!handle||!handle.closest)return false;const header=handle.closest('.kanban-column-header');return el.classList.contains('kanban-column')&&!el.hasAttribute('data-fixed')&&header!==null;},direction:'horizontal'});window.columnsDragulaInstance.on('drop',function(el,target,source,sibling){if(!window.editMode)return;console.log('Column moved - storing new order');const columns=Array.from(columnsWrapper.children);const roomOrder=columns.filter(col=>!col.hasAttribute('data-fixed')).map(col=>col.querySelector('h3').textContent);if(window.storeColumnMove){window.storeColumnMove(roomOrder);}});}
function createKanbanColumn(room,roomButtons,roomControls,isFixed=false){const column=document.createElement('div');column.className='kanban-column';if(isFixed)column.setAttribute('data-fixed','true');const header=document.createElement('div');header.className='kanban-column-header';;const roomName=typeof room==='object'&&room!==null?room.name:room;header.innerHTML=`<h3 style="margin:0;">${roomName}</h3>`;if(!isFixed){header.setAttribute('data-drag-handle','true');if(window.updateColumnHeader){setTimeout(()=>window.updateColumnHeader(column,roomName),0);}
const roomId=typeof room==='object'&&room!==null&&room.id?room.id:roomName;column.setAttribute('data-room-id',roomId);}
column.appendChild(header);const list=document.createElement('ul');list.className='kanban-list';list.style.listStyle='none';list.style.padding='0';list.style.margin='0';list.style.display='flex';list.style.flexDirection='column';list.style.alignItems='center';list.style.minHeight='100px';[...roomButtons,...roomControls].forEach(device=>{const li=document.createElement('li');li.className='kanban-card';li.innerHTML=`<span class="kanban-card-content">${device.name}-${device.type}</span>`;li.setAttribute('data-id',device.id);li.setAttribute('data-type',device.type);const btns=document.createElement('div');btns.style.display='flex';btns.style.gap='4px';btns.style.marginTop='8px';const editBtn=document.createElement('button');editBtn.className='kanban-edit-btn';editBtn.innerHTML='✎';editBtn.title='Edytuj';editBtn.onclick=()=>startEditDeviceKanban(device,li);const removeBtn=document.createElement('button');removeBtn.className='kanban-remove-btn';removeBtn.innerHTML='✖';removeBtn.title='Usuń';removeBtn.onclick=()=>window.deleteDevice(device);btns.appendChild(editBtn);btns.appendChild(removeBtn);li.appendChild(btns);list.appendChild(li);});column.appendChild(list);return column;}
function updateDeviceOrders(targetList,room){const allLis=Array.from(targetList.querySelectorAll('li.kanban-card'));const lightsOrder=allLis.filter(li=>li.getAttribute('data-type')==='light').map(li=>li.getAttribute('data-id'));const thermostatsOrder=allLis.filter(li=>li.getAttribute('data-type')==='thermostat').map(li=>li.getAttribute('data-id'));if(lightsOrder.length>0){fetch('/api/buttons/order',{method:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':getCSRFToken()},body:JSON.stringify({room:room,order:lightsOrder})}).then(r=>r.json()).then(data=>console.log('Lights order updated:',data));}
if(thermostatsOrder.length>0){fetch('/api/temperature_controls/order',{method:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':getCSRFToken()},body:JSON.stringify({room:room,order:thermostatsOrder})}).then(r=>r.json()).then(data=>console.log('Thermostats order updated:',data));}}
window.addDeviceFromKanban=function(name,type,room){const endpoint=type==='light'?'/api/buttons':'/api/temperature_controls';fetch(endpoint,{method:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':getCSRFToken()},body:JSON.stringify({name,room})}).then(r=>r.json()).then(()=>window.loadKanban());};window.deleteDevice=function(device){const endpoint=device.type==='light'?`/api/buttons/${device.id}`:`/api/temperature_controls/${device.id}`;fetch(endpoint,{method:'DELETE',headers:{'X-CSRFToken':getCSRFToken()}}).then(r=>r.json()).then(data=>{if(data.status==='success'){if(window.showNotification)window.showNotification('Urządzenie usunięte!','success');window.loadKanban();}
else{if(window.showNotification)window.showNotification('Błąd usuwania urządzenia: '+(data.message||'Nieznany błąd'),'error');}});};function startEditDeviceKanban(device,li){li.innerHTML=`<input type='text'class='kanban-edit-input'value='${device.name}'/><div class='kanban-edit-btns'><button class='kanban-save-btn'>✔</button><button class='kanban-cancel-btn'>✖</button></div>`;li.querySelector('.kanban-save-btn').onclick=()=>{const newName=li.querySelector('input').value.trim();if(!newName||newName===device.name)return window.loadKanban();const endpoint=device.type==='light'?`/api/buttons/${device.id}`:`/api/temperature_controls/${device.id}`;fetch(endpoint,{method:'PUT',headers:{'Content-Type':'application/json','X-CSRFToken':getCSRFToken()},body:JSON.stringify({name:newName})}).then(r=>r.json()).then(()=>window.loadKanban());};li.querySelector('.kanban-cancel-btn').onclick=()=>window.loadKanban();}
function updateRoomSelect(rooms){const select=document.getElementById('newDeviceRoom');if(!select)return;const firstOption=select.firstChild;select.innerHTML='';select.appendChild(firstOption);rooms.forEach(room=>{const option=document.createElement('option');option.value=room;option.textContent=room;select.appendChild(option);});}
window.addNewRoom=function(){const input=document.getElementById('newRoomName');const name=input.value.trim();if(!name)return;fetch('/api/rooms',{method:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':getCSRFToken()},body:JSON.stringify({room:name})}).then(r=>r.json()).then(data=>{if(data.status==='success'){input.value='';if(window.showNotification)window.showNotification('Pokój dodany!','success');window.loadKanban();}else{if(window.showNotification)window.showNotification(data.message||'Błąd podczas dodawania pokoju','error');}});};window.addNewDevice=function(){const nameInput=document.getElementById('newDeviceName');const typeSelect=document.getElementById('newDeviceType');const roomSelect=document.getElementById('newDeviceRoom');const name=nameInput.value.trim();const type=typeSelect.value;const room=roomSelect.value||null;if(!name||!type)return;const endpoint=type==='light'?'/api/buttons':'/api/temperature_controls';fetch(endpoint,{method:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':getCSRFToken()},body:JSON.stringify({name,room})}).then(r=>r.json()).then(data=>{if(data.status==='success'){nameInput.value='';if(window.showNotification)window.showNotification('Urządzenie dodane!','success');window.loadKanban();}else{if(window.showNotification)window.showNotification(data.message||'Błąd podczas dodawania urządzenia','error');}});};window.loadKanban=function(){console.log('window.loadKanban called');Promise.all([window.app.getRooms(true),fetch('/api/buttons').then(r=>r.json()),fetch('/api/temperature_controls').then(r=>r.json())]).then(([rooms,buttons,controls])=>{console.log('Promise.all resolved',rooms,buttons,controls);buttons.forEach(button=>button.type='light');controls.forEach(control=>control.type='thermostat');updateRoomSelect(rooms);renderKanbanLists(rooms,buttons,controls);}).catch(e=>{console.error('Promise.all error',e);});};document.addEventListener('DOMContentLoaded',function(){window.loadKanban();});if(window.io){const socket=io();socket.on('update_rooms',function(rooms){window.loadKanban();});socket.on('update_buttons',function(buttons){window.loadKanban();});socket.on('update_temperature_controls',function(controls){window.loadKanban();});}