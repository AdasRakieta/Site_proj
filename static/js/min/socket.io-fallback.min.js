(function(global){'use strict';function MockSocket(url,options){this.connected=false;this.id=Math.random().toString(36).substr(2,9);this.events={};setTimeout(()=>{this.connected=true;this.emit('connect');},100);}
MockSocket.prototype.on=function(event,callback){if(!this.events[event]){this.events[event]=[];}
this.events[event].push(callback);};MockSocket.prototype.emit=function(event,data){if(this.events[event]){this.events[event].forEach(callback=>{try{callback(data);}catch(e){console.error('Socket event error:',e);}});}
if(event!=='connect'&&event!=='disconnect'){const endpoint=`/socket/${event}`;fetch(endpoint,{method:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':getCSRFToken()},body:JSON.stringify(data)}).catch(err=>{console.warn('Socket fallback request failed:',err);});}};MockSocket.prototype.disconnect=function(){this.connected=false;this.emit('disconnect');};global.io=function(url,options){return new MockSocket(url,options);};console.log('Socket.IO fallback loaded');})(window);